- if (@paused_subscriptions.present?) && (params[:status].present? ? params[:status] == 'paused' : true)
  - @paused_subscriptions.each do |subscription|
    .subscription-contract-products
      - if (subscription.api_source == 'stripe' rescue false)
        - product = ShopifyAPI::Product.find(subscription.import_data['product_id'])
        .grid
          .grid-item
            .img.account-img
              img src=product.images.first&.src alt=""
            p.text.cancel-text
              = product.title
            / p.text.cancel-text
            /   = "#{number_to_currency(((subscription.api_data['items']['data'][0]['price']['unit_amount']/100) rescue 0))} / #{subscription.api_data['items']['data'][0]['price']['recurring']['interval_count']} #{subscription.api_data['items']['data'][0]['price']['recurring']['interval']}"
          .grid-item
          - if @setting.customer_allowed?('reactive_subscription')
            .grid-item
              = link_to action_subscription_contract_path(:resume, subscription.id, "stripe_subscription=true&token=#{params[:token]}"), class: 'btn_inside reactivate_btn', method: :post, remote: true do
                button.btn-yellow.action-btn.modal_btn type='button' RE-ACTIVATE
        .quantity-wrapper
          form
            .quantity-field
              div
              div
                div.chevron
                  svg fill="none" height="30" viewbox=("0 0 30 30") width="30" xmlns="http://www.w3.org/2000/svg"
                    circle cx="15" cy="15" r="14" stroke="#000000" stroke-width="2" /
                    path d=("M7.5 12L14.5 19L21.5 12") stroke="#000000" stroke-width="2" /
        .slide-down
          .item
            p #{@translation&.cancelled_tab_start_date.present? ? @translation&.cancelled_tab_start_date : 'start date'}
            p
              = subscription.created_at.strftime("%a, %B %e")
          .item
            p #{@translation&.cancelled_tab_quantity.present? ? @translation&.cancelled_tab_quantity : 'quantity'}
            p
              = subscription.import_data['quantity']
      - else
        - billing_policy = subscription.node.billing_policy
        - subscription.node.lines.edges.each do |edge|
          - product = ShopifyAPI::Product.find(edge.node.product_id[/\d+/])
          .grid
            .grid-item
              .img.account-img
                img src=product.images.first&.src alt=""
              p.text.cancel-text
                = product.title
              p.text.cancel-text
                = "#{number_to_currency edge.node.current_price.amount} / #{billing_policy.interval_count} #{billing_policy.interval}"
            .grid-item
            - if @setting.customer_allowed?('reactive_subscription')
              .grid-item
                div.reactivate_btn_div
                  button.btn-yellow.action-btn.modal_btn.reactive_btn data-show="showOnReactivate_#{subscription.node.id[/\d+/]}" type='button' RE-ACTIVATE
                div.with_show_reactvate
                  div.hide id="showOnReactivate_#{subscription.node.id[/\d+/]}"
                    label class="choose_billing_date_label" for="resume_pause_date" Choose Date to resume billing your card on file
                    input type ="date" class="billing_date_resume#{subscription.node.id[/\d+/]}" id="resume_pause_date" class="resume_subscription" min="#{(Date.today + 1.day)&.strftime("%Y-%m-%d")}"
                    button type='submit' class="submit_reactive_btn" data-subscription="#{subscription.node.id[/\d+/]}" Confirm
                    div.error_resume_message style="color: red;"

          .quantity-wrapper
            form
              .quantity-field
                div
                div
                  div.chevron
                    svg fill="none" height="30" viewbox=("0 0 30 30") width="30" xmlns="http://www.w3.org/2000/svg"
                      circle cx="15" cy="15" r="14" stroke="#000000" stroke-width="2" /
                      path d=("M7.5 12L14.5 19L21.5 12") stroke="#000000" stroke-width="2" /
          .slide-down
            .item
              p #{@translation&.cancelled_tab_start_date.present? ? @translation&.cancelled_tab_start_date : 'start date'}
              p
                = DateTime.parse(subscription.node.created_at).strftime("%a, %B %e")
            .item
              p #{@translation&.cancelled_tab_quantity.present? ? @translation&.cancelled_tab_quantity : 'quantity'}
              p
                = edge.node.quantity
- elsif (params[:status].present? && params[:status] == 'paused')
  div.notification-banner
    p.Polaris-Heading No cancelled subscription have been found for your account

javascript: 
  $(".reactive_btn").on("click",function(){
    $(`#${$(this).data("show")}`).removeClass("hide");
  })

  $(".submit_reactive_btn").on("click",function(){
    mixpanelIdentify('#{get_customer_modal(params[:customer])&.mixpanel_id}')
    mixpanelTrack("Reactivated Paused Subscription", {contract_shopify_id: `${$(this).data("subscription")}`})
    $.ajax({
      type: 'post',
      url: `subscriptions/${$(this).data("subscription")}/resume?customer=#{params[:customer]}&billing_date=${$(`.billing_date_resume${$(this).data("subscription")}`).val()}&token=#{params[:token]}`,
      success: function(response){
        if(response?.error){
          $(".error_resume_message").html(`${response?.error}`)
        }else{
          Swal.fire({
            icon: 'success',
            title: "Success! Reloading Page",
            showConfirmButton: false
          })
          location.reload();
        }
      }
    })
  })

