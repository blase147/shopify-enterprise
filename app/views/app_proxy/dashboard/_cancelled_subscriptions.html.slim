- if (@cancelled_subscriptions.present? || @cancelled_line_items.present?) && (params[:status].present? ? params[:status] == 'cancelled' : true)
  .subscription-contract-products
    - @cancelled_subscriptions.each do |subscription|
      - next if (subscription.api_source == 'stripe' rescue true)
      - billing_policy = subscription.node.billing_policy
      - subscription.node.lines.edges.each do |edge|
        - product = ShopifyAPI::Product.find(edge.node.product_id[/\d+/])
        .grid
          .grid-item
            .img.account-img
              img src=product.images.first&.src alt=""
            p.text.cancel-text
              = product.title
            p.text.cancel-text
              = "#{number_to_currency edge.node.current_price.amount} / #{billing_policy.interval_count} #{billing_policy.interval}"
          .grid-item
          - if @setting.customer_allowed?('reactive_subscription')
            .grid-item
              = link_to action_subscription_contract_path(:resume, subscription.node.id[/\d+/]), class: 'btn-link', method: :post, remote: true do
                button.blue-btn.action-btn type='submit' RE-ACTIVATE
        .quantity-wrapper
          form
            .quantity-field
              div
              div
                div.chevron
                  svg fill="none" height="30" viewbox=("0 0 30 30") width="30" xmlns="http://www.w3.org/2000/svg"
                    circle cx="15" cy="15" r="14" stroke="#007EFF" stroke-width="2" /
                    path d=("M7.5 12L14.5 19L21.5 12") stroke="#007EFF" stroke-width="2" /
        .slide-down
          .item
            p #{@translation.cancelled_tab_start_date.present? ? @translation.cancelled_tab_start_date : 'start date'}
            p
              = DateTime.parse(subscription.node.created_at).strftime("%a, %B %e")
          .item
            p #{@translation.cancelled_tab_quantity.present? ? @translation.cancelled_tab_quantity : 'quantity'}
            p
              = edge.node.quantity
    - @cancelled_line_items.each do |line_item|
      - subscription = @active_subscriptions.select{|sub| sub.node.status == "ACTIVE" && sub.node.id == "gid://shopify/SubscriptionContract/#{line_item.subscription_id}"}
      - if subscription.present?
        - subscription = subscription.first
        - billing_policy = subscription.node.billing_policy
        - variant = ShopifyAPI::Variant.find(line_item.variant_id[/\d+/])
        - product = ShopifyAPI::Product.find(variant.product_id)
        .grid
          .grid-item
            .img.account-img
              img src=product.images.first&.src alt=""
            p.text.cancel-text
              = product.title
            p.text.cancel-text
              = "#{number_to_currency variant.price} / #{billing_policy.interval_count} #{billing_policy.interval}"
          .grid-item
          - if @setting.customer_allowed?('reactive_subscription')
            .grid-item
              = link_to action_subscription_contract_path(:add_product, subscription.node.id[/\d+/], "quantity=#{line_item.quantity}&line_item_id=#{line_item.id}&variant_id=#{line_item.variant_id[/\d+/]}"), class: 'resume-btn', remote: true, method: :post do
                button.blue-btn.action-btn #{@translation.cancelled_tab_reactivate_btn.present? ? @translation.cancelled_tab_reactivate_btn : 'RE-ACTIVATE'}
        .quantity-wrapper
          form
            .quantity-field
              div
              div
                div.chevron
                  svg fill="none" height="30" viewbox=("0 0 30 30") width="30" xmlns="http://www.w3.org/2000/svg"
                    circle cx="15" cy="15" r="14" stroke="#007EFF" stroke-width="2" /
                    path d=("M7.5 12L14.5 19L21.5 12") stroke="#007EFF" stroke-width="2" /
        .slide-down
          .item
            p #{@translation.cancelled_tab_start_date.present? ? @translation.cancelled_tab_start_date : 'start date'}
            p
              = DateTime.parse(subscription.node.created_at).strftime("%a, %B %e")
          .item
            p #{@translation.cancelled_tab_quantity.present? ? @translation.cancelled_tab_quantity : 'quantity'}
            p
              = line_item.quantity
- elsif (params[:status].present? && params[:status] == 'cancelled') || !params[:status].present?
  div.notification-banner
    p.Polaris-Heading No cancelled subscription have been found for your account
