.Polaris-Modal.hidden id=("upgrade-#{line_item.id.split("gid://shopify/SubscriptionLine/")[1]}")
  - selling_plan_group = SellingPlanGroup.joins(:selling_plans).where(selling_plans: {shopify_id: selling_plan_id}).first
  - previous_interval = subscription.billing_policy.interval.downcase
  .Polaris-Modal-Dialog__Container data-polaris-layer="true" data-polaris-overlay="true"
    .Polaris-Modal-Dialog aria-labelledby="Polarismodal-header20" role="dialog" tabindex="-1"
      .Polaris-Modal-Dialog__Modal.Polaris-Modal-Dialog--sizeLarge
        .Polaris-Modal__BodyWrapper
          .Polaris-Modal__Body.Polaris-Scrollable.Polaris-Scrollable--vertical.swap-subscription-modal data-polaris-scrollable="true"
            .header
              div
                h2
                  - if !selling_plan_group.present? || !(selling_plan_group&.selling_plans&.count > 1)
                    span Your subscription has only one billing cycle option.
                  - elsif @translation.upgrade_subscription_popup_swap_subscription_to.present?
                    span #{@translation.upgrade_subscription_popup_swap_subscription_to.gsub('{Product}', line_item.title)}
                  - else
                    span Upgrade&nbsp;
                    span.blue
                      = line_item.title
                    span &nbspSubscription to:
              div.close-modal aria-hidden="true" tabindex="-1" data-action='close'
                svg fill="none" height="20" viewbox=("0 0 18 20") width="18" xmlns="http://www.w3.org/2000/svg"
                  path d=("M0 19.9998H2.212L8.484 11.0398L14.756 19.9998H17.052L9.688 9.58378L16.408 0.175781H14.196L8.568 8.23978L2.856 0.175781H0.672L7.448 9.58378L0 19.9998Z") fill="#DDDDDD" /
            - if selling_plan_group.present? && (selling_plan_group&.selling_plans&.count > 1)
              .swap-grid
                - selling_plan_group.selling_plans.each do |selling_plan|
                  - next if previous_interval == selling_plan.interval_type.downcase
                  - button_text = upgrade_operation_title(previous_interval, selling_plan.interval_type.downcase)
                  .item
                    .img
                      img src=product.images.first&.src
                    .title
                      h2
                        = product.title
                      p
                        = "#{number_to_currency product.variants.first.price} / #{selling_plan&.selector_label&.titleize}"
                    = form_tag action_subscription_contract_path(:upgrade_product, subscription.id[/\d+/]), method: :post, :id => "form-#{line_item.id}", remote: true do
                      label
                        input.hidden name="line_id" type="text" value="#{line_item.id}"
                        input.hidden name="selling_plan_id" type="text" value="#{selling_plan.shopify_id}"
                        input.hidden name="interval_type" type="text" value="#{selling_plan.interval_type}"
                        input.hidden name="interval_count" type="text" value="#{selling_plan.interval_count}"
                        input.hidden name="name" type="text" value="#{selling_plan.name}"
                        input.hidden name="action_text" type="text" value="#{button_text.downcase}"
                      .btn-wrapper
                        button type="submit"
                          span #{@translation.upgrade_subscription_popup_upgrade_subscription_btn.present? ? @translation.upgrade_subscription_popup_upgrade_subscription_btn : button_text} &nbsp;
                          span
                          svg fill="none" height="12" viewbox=("0 0 20 12") width="20" xmlns="http://www.w3.org/2000/svg"
                            path d=("M14.5148 0.514648L13.6239 1.40555L17.5882 5.36991H0V6.62985H17.5882L13.6239 10.5942L14.5148 11.4851L20 5.99984L14.5148 0.514648Z") fill="white" /
            - else
              div.no_plan_img
                = image_pack_tag 'no_plan.svg'

  .Polaris-Backdrop
