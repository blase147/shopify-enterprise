.Polaris-Modal id=("editSubscriptionModal-#{subscription.id}") style="display: #{current_setting&.portal_theme.present? ? "none" : ""}" class="#{current_setting&.portal_theme.present? ? "" : "hidden"}"
  .Polaris-Modal-Dialog__Container data-polaris-layer="true" data-polaris-overlay="true"
    .Polaris-Modal-Dialog aria-labelledby="Polarismodal-header20" role="dialog" tabindex="-1"
      .Polaris-Modal-Dialog__Modal
        .Polaris-Modal__BodyWrapper
          .Polaris-Modal__Body.Polaris-Scrollable.Polaris-Scrollable--vertical.edit-subscription-modal data-polaris-scrollable="true"
            .header
              div
                h2 Edit Subscription
              div.close aria-hidden="true" tabindex="-1" data-action='close' data-dismiss="modal"
                svg fill="none" height="20" viewbox=("0 0 18 20") width="18" xmlns="http://www.w3.org/2000/svg"
                  path d=("M0 19.9998H2.212L8.484 11.0398L14.756 19.9998H17.052L9.688 9.58378L16.408 0.175781H14.196L8.568 8.23978L2.856 0.175781H0.672L7.448 9.58378L0 19.9998Z") fill="#DDDDDD" /

            .subscription-details
              .img
                img src=product.images.first&.src
              .title
                h2
                  = product.title
                h3
                  = "#{number_to_currency(((subscription.api_data['items']['data'][0]['price']['unit_amount']/100) rescue 0))} / #{subscription.api_data['items']['data'][0]['price']['recurring']['interval_count']} #{subscription.api_data['items']['data'][0]['price']['recurring']['interval']}"
              .delivery-charge
                div
                  h3 #{@translation.edit_subscription_popup_est_next_delivery.present? ? @translation.edit_subscription_popup_est_next_delivery : 'est. next delivery'}
                  h4
                    = (Time.at(subscription.api_data['billing_cycle_anchor']) + 4.days).strftime("%a, %B %e")
                div
                  h3 #{@translation.edit_subscription_popup_next_card_charge.present? ? @translation.edit_subscription_popup_next_card_charge : 'NEXt card charge'}
                  h4
                    = Time.at(subscription.api_data['billing_cycle_anchor']).strftime("%a, %B %e")
              .btn-wrapper
                - selling_plan_group = nil
                - previous_interval = subscription.api_data['items']['data'][0]['price']['recurring']['interval']
                - disable_upgrade = selling_plan_group.blank? || selling_plan_group.selling_plans.count < 1
                button class=('upgrade-subscription' + (disable_upgrade ? ' light' : '')) disabled=(disable_upgrade) type="button" aria-hidden="true" tabindex="-1" data-action='close' data-toggle="modal" data-target="#upgrade-#{subscription.id}" #{@translation.edit_subscription_popup_upgrade_subscription.present? ? @translation.edit_subscription_popup_upgrade_subscription : 'UPGRADE SUBSCRIPTION'}
                - disable_swap = controller_name == 'dashboard' && !current_setting&.customer_allowed?('swap_product')
                button class=('swap-subscription' + (disable_swap ? ' light' : '')) disabled=(disable_swap) type="button" aria-hidden="true" tabindex="-1" data-action='close' data-toggle="modal" data-target="#swap-#{subscription.id}" #{@translation.edit_subscription_popup_swap_subscription.present? ? @translation.edit_subscription_popup_swap_subscription : 'SWAP SUBSCRIPTION'}
                button.downgrade-subscription.light type="button" DOWNGRADE SUBSCRIPTION
                button.ask-questions.light type="button" #{@translation.edit_subscription_popup_ask_a_question.present? ? @translation.edit_subscription_popup_ask_a_question : 'ASK A QUESTION'}
                - allow_cancel = true
                - if (defined?(admin_action) && setting.admin_allowed?('subscription_cancellation')) || (!defined?(admin_action) && setting.customer_allowed?('subscription_cancellation') && allow_cancel)
                  button.cancel-subscription type="button" aria-hidden="true" tabindex="-1" data-action='close' data-toggle="modal" data-name="#{product.title}" data-target="#cancel-#{subscription.id}" #{@translation.edit_subscription_popup_ask_a_question.present? ? @translation.edit_subscription_popup_ask_a_question : 'CANCEL SUBSCRIPTION'}
            / = p_button text: 'Cancel Subscription', data: { url: action_subscription_path(:cancel), confirm_text: 'Are you sure you want to Cancel your Subscription?' }

  .Polaris-Backdrop
